---

- set_fact:
    telegraf_agent_version: 1.17.0
    telegraf_agent_output:
      - type: influxdb
        config:
          - urls = ["http://{{ st2ha_influxdb_host }}:8086"]
          - database = "{{ st2ha_influxdb_database }}"
          - username = "{{ st2ha_influxdb_telegraf_username }}"
          - password = "{{ st2ha_influxdb_telegraf_password }}"
          - precision = "1us"
    telegraf_global_tags:
      - tag_name: st2role
        tag_value: controller
    telegraf_plugins_default:
      - plugin: cpu
        config:
          - percpu = true
          - totalcpu = true
          - fielddrop = ["time_*"]
      # firewalld isn't enabled in EC2 so it causes this to fail
      # - plugin: conntrack
      #   config:
      #     - files = ["ip_conntrack_count","ip_conntrack_max", "nf_conntrack_count","nf_conntrack_max"]
      #     - dirs = ["/proc/sys/net/ipv4/netfilter","/proc/sys/net/netfilter"]
      - plugin: disk
      - plugin: diskio
      - plugin: kernel
      - plugin: mem
      - plugin: processes
      - plugin: swap
      - plugin: system
      - plugin: net
      - plugin: netstat
      - plugin: nstat
      - plugin: interrupts
      - plugin: linux_sysctl_fs
      - plugin: systemd_units
      - plugin: internal
        config:
          - collect_memstats = true
      - plugin: statsd
        config:
          - protocol = "udp"
          - service_address = ":8125"
          - metric_separator = '.'
          ## Reset gauges every interval (default=true)
          - delete_gauges = false
          ## Reset counters every interval (default=true)
          - delete_counters = true
          ## Reset sets every interval (default=true)
          - delete_sets = false
          ## Reset timings & histograms every interval (default=true)
          - delete_timings = true
          # Tell telegraf to pull out the status code from these metrics names and
          # assign it to the status_code field on the metric
          - templates = ["st2.action.executions.* measurement.measurement.measurement.status", "st2.action.*.*.executions measurement.measurement.pack.action.field", "st2.amqp.pool_publisher.publish_with_retries.* measurement.measurement.measurement.measurement.field", "st2.amqp.publish.* measurement.measurement.measurement.field", "st2.*.request.method.* measurement.measurement.measurement.measurement.method", "st2.*.request.path.* measurement.measurement.measurement.measurement.path", "st2.*.response.status.* measurement.measurement.measurement.measurement.status", "st2.trigger.*.*.processed measurement.measurement.pack.name.flag", "st2.trigger.*.*.*.processed measurement.measurement.pack.name.name.flag", "st2.trigger.*.*.*.*.processed measurement.measurement.pack.name.name.name.flag", "st2.notifier.* measurement.measurement.notifier", "st2.orquesta.*.*, measurement.measurement.field.measurement" ]
      - plugin: mongodb
        config:
          - servers = ["mongodb://admin:{{ st2ha_mongodb_password }}@127.0.0.1:27017"]
          - gather_perdb_stats = true
          - gather_col_stats = true
      - plugin: procstat
        config:
          - exe = "mongod"
      - plugin: rabbitmq
        config:
          - url = "http://127.0.0.1:15672"
          - username = "{{ st2ha_rabbitmq_username }}"
          - password = "{{ st2ha_rabbitmq_password }}"
      - plugin: nginx
        config:
          - urls = ["https://127.0.0.1/basic_status"]
          - insecure_skip_verify = true
      - plugin: logparser
        config:
          - files = ["/var/log/nginx/access.log", "/var/log/nginx/ssl-st2webui.access.log", "/var/log/nginx/st2webui.access.log"]
          - from_beginning = true
          - name_override = "nginx_access_log"
          - "[inputs.logparser.grok]"
          - '  patterns = ["%{COMBINED_LOG_FORMAT}"]'

- set_fact:
    telegraf_plugins_default: "{{ telegraf_plugins_default + [ {\"plugin\": \"procstat\", \"config\": [\"pattern = \" + '\"' + item + '\"' + \"\"] } ] }}"
  with_items: "{{ st2_services }}"

- debug:
    msg: "telegraf plugin defaults = {{ telegraf_plugins_default }}"

# TODO
# - MongoDB
# - RabbitMQ
# - nginx
# - StackStorm/statsd
